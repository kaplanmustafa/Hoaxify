{"version":3,"sources":["assets/profile.png","assets/hoaxify.png","components/Input.js","components/ButtonWithProgress.js","shared/ApiProgress.js","api/apiCalls.js","redux/authActions.js","redux/Constants.js","pages/UserSignupPage.js","pages/LoginPage.js","components/LanguageSelector.js","components/ProfileImageWithDefault.js","components/Modal.js","components/HoaxView.js","components/Spinner.js","components/HoaxFeed.js","components/AutoUploadImage.js","components/HoaxSubmit.js","components/UserListItem.js","components/UserList.js","pages/HomePage.js","components/ProfileCard.js","pages/UserPage.js","components/TopBar.js","container/App.js","serviceWorker.js","i18n.js","redux/authReducer.js","redux/configureStore.js","index.js"],"names":["module","exports","Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setpendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","eject","getUsers","page","size","get","setAuthorizationHeader","token","isLoggedIn","authorizationHeaderValue","defaults","headers","getUser","username","updateUser","body","put","postHoax","hoax","post","getHoaxes","path","getOldHoaxes","id","getNewHoaxCount","getNewHoaxes","postHoaxAttachment","attachment","deleteHoax","delete","deleteUser","logoutSuccess","dispatch","a","loginSuccess","authState","payload","loginHandler","credentials","creds","data","user","password","signupHandler","UserSignupPage","passwordRepeatError","displayName","passwordRepeat","form","setForm","errors","setErrors","useDispatch","event","target","value","previousErrors","previousForm","onClickSignup","preventDefault","history","push","validationErrors","t","useTranslation","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","LoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","LanguageSelector","i18n","onChangeLanguage","language","changeLanguage","src","alt","style","cursor","ProfileImageWithDefault","image","tempimage","imageSource","defaultPicture","onError","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","HoaxView","loggedInUser","useSelector","store","onDeleteHoax","content","timestamp","fileAttachment","modalVisible","setModalVisible","onClickDelete","formatted","format","ownedByLoggedInUser","to","width","height","textDecoration","fileType","Spinner","HoaxFeed","last","number","hoaxPage","setHoaxPage","newHoaxCount","setNewHoaxCount","useParams","lastHoaxId","firstHoaxId","length","lastHoaxIndex","initialHoaxLoadProgress","oldHoaxPath","loadOldHoaxesProgress","newHoaxPath","loadNewHoaxesProgress","looper","setInterval","count","clearInterval","previousHoaxPage","loadHoaxes","loadOldHoaxes","loadNewHoaxes","onDeleteHoaxSuccess","filter","map","key","AutoUploadImage","uploading","position","opacity","HoaxSubmit","focused","setFocused","setHoax","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","onClickHoaxify","uploadFile","file","FormData","append","textAreaClass","rows","onFocus","placeholder","files","fileReader","FileReader","onloadend","result","readAsDataURL","UserListItem","UserList","setPage","loadFailure","setLoadFailure","loadUsers","users","first","actionDiv","previousPage","nextPage","HomePage","ProfileCard","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","setUser","editable","setEditable","setValidationErrors","useHistory","pathUsername","loggedInUsername","previousValidationErrors","pendingApiCallDeleteUser","onClickSave","split","onClickDeleteUser","imageError","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","dropDownClass","ref","logo","App","exact","component","Boolean","window","location","hostname","match","initReactI18next","init","resources","en","translations","Username","Password","Login","Logout","Users","Next","Previous","Edit","Save","Cancel","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","index","defaultState","authReducer","state","action","secureLS","SecureLS","getStateFromStorage","hoaxAuth","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e95455ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.926fda93.png\";","module.exports = __webpack_public_path__ + \"static/media/hoaxify.2dcb4821.png\";","import React from \"react\";\r\n\r\nconst Input = (props) => {\r\n  const { label, error, name, onChange, type, defaultValue } = props;\r\n  let className = \"form-control\";\r\n\r\n  if (type === \"file\") {\r\n    className += \"-file\";\r\n  }\r\n\r\n  if (error !== undefined) {\r\n    className += \" is-invalid\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <input\r\n        className={className}\r\n        name={name}\r\n        onChange={onChange}\r\n        type={type}\r\n        defaultValue={defaultValue}\r\n      ></input>\r\n      <div className=\"invalid-feedback\">{error}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst ButtonWithProgress = (props) => {\r\n  const { onClick, pendingApiCall, disabled, text, className } = props;\r\n\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      className={className || \"btn btn-primary\"}\r\n      onClick={onClick}\r\n    >\r\n      {pendingApiCall && ( // sol taraf doğruysa sağ tarafı göster (Conditional Rendering)\r\n        <span className=\"spinner-border spinner-border-sm\"></span>\r\n      )}{\" \"}\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonWithProgress;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n  const [pendingApiCall, setpendingApiCall] = useState(false);\r\n\r\n  // Neye göre değişeceği verilmezse componentDidMount çalışınca çalışır\r\n  useEffect(() => {\r\n    let requestInterceptor, responseInterceptor;\r\n\r\n    const updateApiCallFor = (method, url, inProgress) => {\r\n      if (method !== apiMethod) {\r\n        return;\r\n      }\r\n\r\n      if (strictPath && url === apiPath) {\r\n        setpendingApiCall(inProgress);\r\n      } else if (!strictPath && url.startsWith(apiPath)) {\r\n        setpendingApiCall(inProgress);\r\n      }\r\n    };\r\n\r\n    const registerInterceptors = () => {\r\n      requestInterceptor = axios.interceptors.request.use((request) => {\r\n        const { url, method } = request;\r\n\r\n        updateApiCallFor(method, url, true);\r\n        return request;\r\n      });\r\n\r\n      responseInterceptor = axios.interceptors.response.use(\r\n        (response) => {\r\n          const { url, method } = response.config;\r\n\r\n          updateApiCallFor(method, url, false);\r\n          return response;\r\n        },\r\n        (error) => {\r\n          const { url, method } = error.config;\r\n\r\n          updateApiCallFor(method, url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n\r\n    const unregisterInterceptors = () => {\r\n      axios.interceptors.request.eject(requestInterceptor); // Interceptorları temizlemek için\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n    registerInterceptors();\r\n\r\n    // Component unmount olunca çalışır\r\n    return function unmount() {\r\n      unregisterInterceptors();\r\n    };\r\n  }, [apiPath, apiMethod, strictPath]);\r\n\r\n  return pendingApiCall;\r\n};\r\n","import axios from \"axios\";\r\n\r\n// Başında adresi vermediğimiz için kendi portu olan 3000'e istek atar.\r\n//Backendin olduğu port olan 4000'e istek atmak için package.json'da proxy değerini 4000 yaptık.\r\nexport const signup = (body) => {\r\n  return axios.post(\"/api/1.0/users\", body);\r\n};\r\n\r\nexport const login = (creds) => {\r\n  return axios.post(\"/api/1.0/auth\", creds);\r\n};\r\n\r\nexport const logout = () => {\r\n  return axios.post(\"/api/1.0/logout\");\r\n};\r\n\r\nexport const changeLanguage = (language) => {\r\n  axios.defaults.headers[\"accept-language\"] = language;\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n  return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n};\r\n\r\nexport const setAuthorizationHeader = ({ token, isLoggedIn }) => {\r\n  if (isLoggedIn) {\r\n    const authorizationHeaderValue = `Bearer ${token}`;\r\n    axios.defaults.headers[\"Authorization\"] = authorizationHeaderValue;\r\n  } else {\r\n    delete axios.defaults.headers[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport const getUser = (username) => {\r\n  return axios.get(`/api/1.0/users/${username}`);\r\n};\r\n\r\nexport const updateUser = (username, body) => {\r\n  return axios.put(`/api/1.0/users/${username}`, body);\r\n};\r\n\r\nexport const postHoax = (hoax) => {\r\n  return axios.post(\"/api/1.0/hoaxes\", hoax);\r\n};\r\n\r\nexport const getHoaxes = (username, page = 0) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/hoaxes?page=`\r\n    : \"/api/1.0/hoaxes?page=\";\r\n  return axios.get(path + page);\r\n};\r\n\r\nexport const getOldHoaxes = (id, username) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/hoaxes/`\r\n    : \"/api/1.0/hoaxes/\";\r\n  return axios.get(path + id);\r\n};\r\n\r\nexport const getNewHoaxCount = (id, username) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/hoaxes/${id}?count=true`\r\n    : `/api/1.0/hoaxes/${id}?count=true`;\r\n  return axios.get(path);\r\n};\r\nexport const getNewHoaxes = (id, username) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/hoaxes/${id}?direction=after`\r\n    : `/api/1.0/hoaxes/${id}?direction=after`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const postHoaxAttachment = (attachment) => {\r\n  return axios.post(\"/api/1.0/hoax-attachments\", attachment);\r\n};\r\n\r\nexport const deleteHoax = (id) => {\r\n  return axios.delete(`/api/1.0/hoaxes/${id}`);\r\n};\r\n\r\nexport const deleteUser = (username) => {\r\n  return axios.delete(`/api/1.0/users/${username}`);\r\n};\r\n","import * as ACTIONS from \"./Constants\";\r\nimport { login, signup, logout } from \"../api/apiCalls\";\r\n\r\nexport const logoutSuccess = () => {\r\n  return async function (dispatch) {\r\n    try {\r\n      await logout();\r\n    } catch (error) {}\r\n\r\n    dispatch({\r\n      type: ACTIONS.LOGOUT_SUCCESS,\r\n    });\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (authState) => {\r\n  return {\r\n    type: ACTIONS.LOGIN_SUCCESS,\r\n    payload: authState,\r\n  };\r\n};\r\n\r\nexport const updateSuccess = ({ displayName, image }) => {\r\n  return {\r\n    type: ACTIONS.UPDATE_SUCCESS,\r\n    payload: {\r\n      displayName,\r\n      image,\r\n    },\r\n  };\r\n};\r\n\r\nexport const loginHandler = (credentials) => {\r\n  return async function (dispatch) {\r\n    const response = await login(credentials);\r\n\r\n    const authState = {\r\n      ...response.data.user,\r\n      password: credentials.password,\r\n      token: response.data.token,\r\n    };\r\n\r\n    dispatch(loginSuccess(authState));\r\n\r\n    return response;\r\n  };\r\n};\r\n\r\nexport const signupHandler = (user) => {\r\n  return async function (dispatch) {\r\n    const response = await signup(user);\r\n    await dispatch(loginHandler(user));\r\n    return response;\r\n  };\r\n};\r\n","export const LOGOUT_SUCCESS = \"logout-success\";\r\nexport const LOGIN_SUCCESS = \"login-success\";\r\nexport const UPDATE_SUCCESS = \"update-success\"","import React, { useState } from \"react\";\r\nimport Input from \"../components/Input\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signupHandler } from \"../redux/authActions\";\r\n\r\nconst UserSignupPage = (props) => {\r\n  const [form, setForm] = useState({\r\n    username: null,\r\n    displayName: null,\r\n    password: null,\r\n    passwordRepeat: null,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target; // Object Destructuring\r\n\r\n    setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined }));\r\n    // previousForm --> önceki state değeri\r\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n\r\n  const onClickSignup = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n    const { username, displayName, password, passwordRepeat } = form;\r\n\r\n    const body = {\r\n      username,\r\n      displayName,\r\n      password,\r\n      passwordRepeat,\r\n    };\r\n\r\n    try {\r\n      await dispatch(signupHandler(body)); // async ve await ile signup işlemi tamamlandıktan sonra alt satıra geçer\r\n      push(\"/\");\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    username: usernameError,\r\n    displayName: displayNameError,\r\n    password: passwordError,\r\n  } = errors;\r\n\r\n  const pendingApiCallSignup = useApiProgress(\"post\", \"/api/1.0/users\");\r\n  const pendingApiCallLogin = useApiProgress(\"post\", \"/api/1.0/auth\");\r\n\r\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = t(\"Password mismatch\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container w-25\">\r\n      <form>\r\n        <h1 className=\"text-center\">{t(\"Sign Up\")}</h1>\r\n        <Input\r\n          name=\"username\"\r\n          label={t(\"Username\")}\r\n          error={usernameError}\r\n          onChange={onChange}\r\n        />\r\n        <Input\r\n          name=\"displayName\"\r\n          label={t(\"Display Name\")}\r\n          error={displayNameError}\r\n          onChange={onChange}\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          label={t(\"Password\")}\r\n          error={passwordError}\r\n          onChange={onChange}\r\n          type=\"password\"\r\n        />\r\n        <Input\r\n          name=\"passwordRepeat\"\r\n          label={t(\"Password Repeat\")}\r\n          error={passwordRepeatError}\r\n          onChange={onChange}\r\n          type=\"password\"\r\n        />\r\n        <div className=\"text-center\">\r\n          <ButtonWithProgress\r\n            disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n            onClick={onClickSignup}\r\n            pendingApiCall={pendingApiCall}\r\n            text={t(\"Sign Up\")}\r\n          ></ButtonWithProgress>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignupPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Input from \"../components/Input\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginHandler } from \"../redux/authActions\";\r\n\r\nconst LoginPage = (props) => {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // username veya passwordde değişiklik olunca ilk fonksiyon çalışır --> Trigger\r\n  useEffect(() => {\r\n    setError(undefined);\r\n  }, [username, password]);\r\n\r\n  const onClickLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const creds = {\r\n      username,\r\n      password,\r\n    };\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n\r\n    setError(undefined);\r\n\r\n    try {\r\n      await dispatch(loginHandler(creds));\r\n      push(\"/\"); // Giriş başarılıysa home'a yönlendir\r\n    } catch (apiError) {\r\n      setError(apiError.response.data.message);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress(\"post\", \"/api/1.0/auth\");\r\n  const buttonEnabled = username && password; // 2 değerin varlığına göre buttonEnabled'a true veya false atar\r\n\r\n  return (\r\n    <div className=\"container w-25\">\r\n      <form>\r\n        <h1 className=\"text-center\">{t(\"Login\")}</h1>\r\n        <Input\r\n          label={t(\"Username\")}\r\n          onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          label={t(\"Password\")}\r\n          onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}\r\n          type=\"password\"\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        <div className=\"text-center\">\r\n          <ButtonWithProgress\r\n            disabled={!buttonEnabled || pendingApiCall}\r\n            onClick={onClickLogin}\r\n            pendingApiCall={pendingApiCall}\r\n            text={t(\"Login\")}\r\n          ></ButtonWithProgress>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { changeLanguage } from \"../api/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst LanguageSelector = (props) => {\r\n  const { i18n } = useTranslation();\r\n\r\n  const onChangeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n\r\n    changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <img\r\n        src=\"https://www.countryflags.io/tr/flat/24.png\"\r\n        alt=\"Turkish Flag\"\r\n        onClick={() => {\r\n          onChangeLanguage(\"tr\");\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      ></img>\r\n      <img\r\n        src=\"https://www.countryflags.io/us/flat/24.png\"\r\n        alt=\"USA Flag\"\r\n        onClick={() => {\r\n          onChangeLanguage(\"en\");\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","import React from \"react\";\r\nimport defaultPicture from \"../assets/profile.png\";\r\n\r\nconst ProfileImageWithDefault = (props) => {\r\n  const { image, tempimage } = props;\r\n\r\n  let imageSource = defaultPicture;\r\n\r\n  if (image) {\r\n    imageSource = \"/images/profile/\" + image;\r\n  }\r\n\r\n  if (tempimage === \"delete-profile-photo\") {\r\n    imageSource = defaultPicture;\r\n  }\r\n\r\n  return (\r\n    <img\r\n      src={tempimage || imageSource}\r\n      {...props}\r\n      onError={(event) => {\r\n        event.target.src = defaultPicture;\r\n      }}\r\n      alt=\"user-profile-img\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileImageWithDefault;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ButtonWithProgress from \"./ButtonWithProgress\";\r\n\r\nconst Modal = (props) => {\r\n  const {\r\n    visible,\r\n    onClickCancel,\r\n    onClickOk,\r\n    title,\r\n    message,\r\n    pendingApiCall,\r\n    okButton,\r\n  } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let className = \"modal fade\";\r\n\r\n  if (visible) {\r\n    className += \" show d-block\";\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{ backgroundColor: \"#000000b0\" }}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n          </div>\r\n          <div className=\"modal-body\">{message}</div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={onClickCancel}\r\n              disabled={pendingApiCall}\r\n            >\r\n              {t(\"Cancel\")}\r\n            </button>\r\n            <ButtonWithProgress\r\n              text={okButton}\r\n              pendingApiCall={pendingApiCall}\r\n              disabled={pendingApiCall}\r\n              className=\"btn btn-danger\"\r\n              onClick={onClickOk}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"timeago.js\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deleteHoax } from \"../api/apiCalls\";\r\nimport Modal from \"./Modal\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\n\r\nconst HoaxView = (props) => {\r\n  const loggedInUser = useSelector((store) => store.username);\r\n  const { hoax, onDeleteHoax } = props;\r\n  const { user, content, timestamp, fileAttachment, id } = hoax;\r\n  const { username, displayName, image } = user;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const pendingApiCall = useApiProgress(\r\n    \"delete\",\r\n    `/api/1.0/hoaxes/${id}`,\r\n    true\r\n  );\r\n\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const onClickDelete = async () => {\r\n    await deleteHoax(id);\r\n    onDeleteHoax(id);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const formatted = format(timestamp, i18n.language);\r\n\r\n  const ownedByLoggedInUser = loggedInUser === username;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card p-1\">\r\n        <div className=\"d-flex\">\r\n          <Link to={`/user/${username}`}>\r\n            <ProfileImageWithDefault\r\n              image={image}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              className=\"rounded-circle shadow m-1\"\r\n            />\r\n          </Link>\r\n          <div className=\"flex-fill m-auto pl-2\">\r\n            <Link\r\n              to={`/user/${username}`}\r\n              className=\"text-dark\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <h6 className=\"d-inline\">\r\n                {displayName}@{username}\r\n              </h6>\r\n              <span> - </span>\r\n              <span>{formatted}</span>\r\n            </Link>\r\n            {ownedByLoggedInUser && (\r\n              <button\r\n                className=\"btn btn-delete-link\"\r\n                onClick={() => setModalVisible(true)}\r\n              >\r\n                <span className=\"material-icons\">delete_outline</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"pl-5\">{content}</div>\r\n        {fileAttachment && (\r\n          <div className=\"pl-5\">\r\n            {fileAttachment.fileType.startsWith(\"image\") && (\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={\"images/attachments/\" + fileAttachment.name}\r\n                alt=\"content\"\r\n              />\r\n            )}\r\n            {!fileAttachment.fileType.startsWith(\"image\") && (\r\n              <strong>Hoax has unknown attachment</strong>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        title={t(\"Delete Hoax\")}\r\n        visible={modalVisible}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDelete}\r\n        okButton={t(\"Delete Hoax\")}\r\n        message={\r\n          <div>\r\n            <div>\r\n              <strong>{t(\"Are you sure to delete hoax?\")}</strong>\r\n            </div>\r\n            <span>{content}</span>\r\n          </div>\r\n        }\r\n        pendingApiCall={pendingApiCall}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HoaxView;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"spinner-border text-black-50\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getHoaxes,\r\n  getNewHoaxCount,\r\n  getNewHoaxes,\r\n  getOldHoaxes,\r\n} from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport HoaxView from \"./HoaxView\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst HoaxFeed = () => {\r\n  const [hoaxPage, setHoaxPage] = useState({\r\n    content: [],\r\n    last: true,\r\n    number: 0,\r\n  });\r\n  const [newHoaxCount, setNewHoaxCount] = useState(0);\r\n\r\n  const { t } = useTranslation();\r\n  const { username } = useParams();\r\n\r\n  let lastHoaxId = 0;\r\n  let firstHoaxId = 0;\r\n  if (hoaxPage.content.length > 0) {\r\n    firstHoaxId = hoaxPage.content[0].id;\r\n\r\n    const lastHoaxIndex = hoaxPage.content.length - 1;\r\n    lastHoaxId = hoaxPage.content[lastHoaxIndex].id;\r\n  }\r\n\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/hoaxes?page=`\r\n    : \"/api/1.0/hoaxes?page=\";\r\n\r\n  const initialHoaxLoadProgress = useApiProgress(\"get\", path);\r\n  const oldHoaxPath = username\r\n    ? `/api/1.0/users/${username}/hoaxes/${lastHoaxId}`\r\n    : `/api/1.0/hoaxes/${lastHoaxId}`;\r\n\r\n  const loadOldHoaxesProgress = useApiProgress(\"get\", oldHoaxPath, true);\r\n\r\n  const newHoaxPath = username\r\n    ? `/api/1.0/users/${username}/hoaxes/${firstHoaxId}?direction=after`\r\n    : `/api/1.0/hoaxes/${firstHoaxId}?direction=after`;\r\n\r\n  const loadNewHoaxesProgress = useApiProgress(\"get\", newHoaxPath, true);\r\n\r\n  useEffect(() => {\r\n    const getCount = async () => {\r\n      try {\r\n        const response = await getNewHoaxCount(firstHoaxId, username);\r\n        setNewHoaxCount(response.data.count);\r\n      } catch (error) {}\r\n    };\r\n\r\n    let looper = setInterval(getCount, 5000);\r\n\r\n    return function cleanup() {\r\n      clearInterval(looper);\r\n    };\r\n  }, [firstHoaxId, username]);\r\n\r\n  useEffect(() => {\r\n    const loadHoaxes = async (page) => {\r\n      try {\r\n        const response = await getHoaxes(username, page);\r\n        setHoaxPage((previousHoaxPage) => ({\r\n          ...response.data,\r\n          content: [...previousHoaxPage.content, ...response.data.content],\r\n        }));\r\n      } catch (error) {}\r\n    };\r\n\r\n    loadHoaxes();\r\n  }, [username]);\r\n\r\n  const loadOldHoaxes = async () => {\r\n    try {\r\n      const response = await getOldHoaxes(lastHoaxId, username);\r\n      setHoaxPage((previousHoaxPage) => ({\r\n        ...response.data,\r\n        content: [...previousHoaxPage.content, ...response.data.content],\r\n      }));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loadNewHoaxes = async () => {\r\n    try {\r\n      const response = await getNewHoaxes(firstHoaxId, username);\r\n      setHoaxPage((previousHoaxPage) => ({\r\n        ...previousHoaxPage.content,\r\n        content: [...response.data, ...previousHoaxPage.content],\r\n      }));\r\n      setNewHoaxCount(0);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const onDeleteHoaxSuccess = (id) => {\r\n    setHoaxPage((previousHoaxPage) => ({\r\n      ...previousHoaxPage.content,\r\n      content: previousHoaxPage.content.filter((hoax) => hoax.id !== id),\r\n    }));\r\n  };\r\n\r\n  const { content, last } = hoaxPage;\r\n\r\n  if (content.length === 0) {\r\n    return (\r\n      <div className=\"alert alert-secondary text-center\">\r\n        {initialHoaxLoadProgress ? <Spinner /> : t(\"There are no hoaxes\")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {newHoaxCount > 0 && (\r\n        <div\r\n          className=\"alert alert-secondary text-center mb-1 bg-primary text-white\"\r\n          style={{ cursor: loadNewHoaxesProgress ? \"not-allowed\" : \"pointer\" }}\r\n          onClick={loadNewHoaxesProgress ? () => {} : loadNewHoaxes}\r\n        >\r\n          {loadNewHoaxesProgress ? <Spinner /> : t(\"There are new hoaxes\")}\r\n        </div>\r\n      )}\r\n      {content.map((hoax) => {\r\n        return (\r\n          <HoaxView\r\n            key={hoax.id}\r\n            hoax={hoax}\r\n            onDeleteHoax={onDeleteHoaxSuccess}\r\n          />\r\n        );\r\n      })}\r\n      {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center mt-1 bg-primary text-white\"\r\n          style={{ cursor: loadOldHoaxesProgress ? \"not-allowed\" : \"pointer\" }}\r\n          onClick={loadOldHoaxesProgress ? () => {} : loadOldHoaxes}\r\n        >\r\n          {loadOldHoaxesProgress ? <Spinner /> : t(\"Load Old Hoaxes\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoaxFeed;\r\n","import React from \"react\";\r\nimport \"./AutoUploadImage.css\";\r\n\r\nconst AutoUploadImage = ({ image, uploading }) => {\r\n  return (\r\n    <div style={{ position: \"relative\" }} className=\"mt-2\">\r\n      <img className=\"img-thumbnail\" src={image} alt=\"hoax-attachment\" />\r\n      <div className=\"overlay\" style={{ opacity: uploading ? 1 : 0 }}>\r\n        <div className=\"d-flex justify-content-center h-100\">\r\n          <div className=\"spinner-border text-light m-auto\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoUploadImage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { postHoax, postHoaxAttachment } from \"../api/apiCalls\";\r\nimport ButtonWithProgress from \"./ButtonWithProgress\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Input from \"./Input\";\r\nimport AutoUploadImage from \"./AutoUploadImage\";\r\n\r\nconst HoaxSubmit = () => {\r\n  const { image } = useSelector((store) => ({ image: store.image }));\r\n\r\n  const [focused, setFocused] = useState(false);\r\n  const [hoax, setHoax] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [newImage, setNewImage] = useState();\r\n  const [attachmentId, setAttachmentId] = useState();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!focused) {\r\n      setHoax(\"\");\r\n      setErrors({});\r\n      setNewImage();\r\n      setAttachmentId();\r\n    }\r\n  }, [focused]);\r\n\r\n  useEffect(() => {\r\n    setErrors({});\r\n  }, [hoax]);\r\n\r\n  const pendingApiCall = useApiProgress(\"post\", \"/api/1.0/hoaxes\", true);\r\n  const pendingFileUpload = useApiProgress(\r\n    \"post\",\r\n    \"/api/1.0/hoax-attachments\",\r\n    true\r\n  );\r\n\r\n  const onClickHoaxify = async () => {\r\n    const body = {\r\n      content: hoax,\r\n      attachmentId\r\n    };\r\n\r\n    try {\r\n      await postHoax(body);\r\n      setFocused(false);\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeFile = (event) => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const file = event.target.files[0];\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n      uploadFile(file);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const uploadFile = async (file) => {\r\n    const attachment = new FormData();\r\n    attachment.append(\"file\", file);\r\n\r\n    const response = await postHoaxAttachment(attachment);\r\n    setAttachmentId(response.data.id);\r\n  };\r\n\r\n  let textAreaClass = \"form-control\";\r\n  if (errors.content) {\r\n    textAreaClass += \" is-invalid\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"card p-1 flex-row\">\r\n      <ProfileImageWithDefault\r\n        image={image}\r\n        width=\"32\"\r\n        height=\"32\"\r\n        className=\"rounded-circle shadow mr-1\"\r\n      />\r\n      <div className=\"flex-fill\">\r\n        <textarea\r\n          className={textAreaClass}\r\n          rows={focused ? \"3\" : \"1\"}\r\n          onFocus={() => setFocused(true)}\r\n          placeholder={t(\"Post Hoax...\")}\r\n          onChange={(event) => setHoax(event.target.value)}\r\n          value={hoax}\r\n        />\r\n        <div className=\"invalid-feedback\">{errors.content}</div>\r\n        {focused && (\r\n          <>\r\n            {!newImage && <Input type=\"file\" onChange={onChangeFile} />}\r\n            {newImage && (\r\n              <AutoUploadImage image={newImage} uploading={pendingFileUpload} />\r\n            )}\r\n            <div className=\"text-right mt-1\">\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary\"\r\n                onClick={onClickHoaxify}\r\n                text=\"Hoaxify\"\r\n                disabled={pendingApiCall || pendingFileUpload}\r\n                pendingApiCall={pendingApiCall}\r\n              />\r\n              <button\r\n                className=\"btn btn-danger d-inline-flex ml-1\"\r\n                onClick={() => setFocused(false)}\r\n                disabled={pendingApiCall || pendingFileUpload}\r\n              >\r\n                <span className=\"material-icons\">cancel</span>\r\n                {t(\"Cancel\")}\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoaxSubmit;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\n\r\nconst UserListItem = (props) => {\r\n  const { user } = props;\r\n  const { username, displayName, image } = user;\r\n\r\n  return (\r\n    <Link\r\n      to={`/user/${username}`}\r\n      className=\"list-group-item list-group-item-action\"\r\n    >\r\n      <ProfileImageWithDefault\r\n        className=\"rounded-circle shadow\"\r\n        width=\"32\"\r\n        height=\"32\"\r\n        alt={`${username} profile`}\r\n        image={image}\r\n      />\r\n      <span className=\"pl-2\">\r\n        {displayName}@{username}\r\n      </span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getUsers } from \"../api/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst UserList = (props) => {\r\n  const [page, setPage] = useState({\r\n    content: [],\r\n    size: 3,\r\n    number: 0,\r\n  });\r\n\r\n  const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n  const pendingApiCall = useApiProgress(\"get\", \"/api/1.0/users?page\");\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []); // --> array boş olursa sadece componentDidMount çalışır\r\n\r\n  const onClickNext = () => {\r\n    const nextPage = page.number + 1;\r\n    loadUsers(nextPage);\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    const previousPage = page.number - 1;\r\n    loadUsers(previousPage);\r\n  };\r\n\r\n  const loadUsers = async (page) => {\r\n    setLoadFailure(false);\r\n\r\n    try {\r\n      const response = await getUsers(page);\r\n      setPage(response.data);\r\n    } catch (error) {\r\n      setLoadFailure(true);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  const { content: users, first, last } = page;\r\n\r\n  let actionDiv = (\r\n    <div>\r\n      {first === false && (\r\n        <button className=\"btn btn-sm btn-light\" onClick={onClickPrevious}>\r\n          {t(\"Previous\")}\r\n        </button>\r\n      )}\r\n      {last === false && (\r\n        <button\r\n          className=\"btn btn-sm btn-light float-right\"\r\n          onClick={onClickNext}\r\n        >\r\n          {t(\"Next\")}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (pendingApiCall) {\r\n    actionDiv = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3 className=\"card-header text-center\">{t(\"Users\")}</h3>\r\n      <div className=\"list-group-flush\">\r\n        {users.map((user) => (\r\n          <UserListItem key={user.username} user={user} />\r\n        ))}\r\n      </div>\r\n      {actionDiv}\r\n      {loadFailure && (\r\n        <div className=\"text-center text-danger\">{t(\"Load Failure\")}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport HoaxFeed from \"../components/HoaxFeed\";\r\nimport HoaxSubmit from \"../components/HoaxSubmit\";\r\nimport UserList from \"../components/UserList\";\r\n\r\nconst HomePage = () => {\r\n  const { isLoggedIn } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          {isLoggedIn && (\r\n            <div className=\"mb-1\">\r\n              <HoaxSubmit />\r\n            </div>\r\n          )}\r\n          <HoaxFeed />\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <UserList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport Input from \"./Input\";\r\nimport { deleteUser, updateUser } from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from \"./ButtonWithProgress\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { logoutSuccess, updateSuccess } from \"../redux/authActions\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst ProfileCard = (props) => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n\r\n  const { username: loggedInUsername } = useSelector((store) => ({\r\n    username: store.username,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername);\r\n  }, [pathUsername, loggedInUsername]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors((previousValidationErrors) => {\r\n      return {\r\n        ...previousValidationErrors,\r\n        displayName: undefined,\r\n      };\r\n    });\r\n  }, [updatedDisplayName]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors((previousValidationErrors) => {\r\n      return {\r\n        ...previousValidationErrors,\r\n        image: undefined,\r\n      };\r\n    });\r\n  }, [newImage]);\r\n\r\n  const { username, displayName, image } = user;\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress(\r\n    \"delete\",\r\n    `/api/1.0/users/${username}`,\r\n    true\r\n  );\r\n\r\n  const onChangeFile = (event) => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const file = event.target.files[0];\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file); // Bu işlemden sonra onloadend çağırılır\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n  const onClickSave = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(\",\")[1];\r\n    }\r\n\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image,\r\n    };\r\n\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data);\r\n      dispatch(updateSuccess(response.data));\r\n    } catch (error) {\r\n      setValidationErrors(error.response.data.validationErrors);\r\n    }\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(username);\r\n    setModalVisible(false);\r\n    dispatch(logoutSuccess());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const pendingApiCall = useApiProgress(\"put\", \"/api/1.0/users/\" + username);\r\n  const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && (\r\n          <>\r\n            <h3>\r\n              {displayName}@{username}\r\n            </h3>\r\n            {editable && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-success d-inline-flex\"\r\n                  onClick={() => setInEditMode(true)}\r\n                >\r\n                  <span className=\"material-icons\">edit</span>\r\n                  {t(\"Edit\")}\r\n                </button>\r\n                <div className=\"pt-2\">\r\n                  <button\r\n                    className=\"btn btn-danger d-inline-flex\"\r\n                    onClick={() => setModalVisible(true)}\r\n                  >\r\n                    <span className=\"material-icons\">directions_run</span>\r\n                    {t(\"Delete My Account\")}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t(\"Change Display Name\")}\r\n              defaultValue={displayName}\r\n              onChange={(event) => {\r\n                setUpdatedDisplayName(event.target.value);\r\n              }}\r\n              error={displayNameError}\r\n            />\r\n            <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickSave}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <span className=\"material-icons\">save</span>\r\n                    {t(\"Save\")}\r\n                  </>\r\n                }\r\n              />\r\n              <button\r\n                className=\"btn btn-danger d-inline-flex ml-1\"\r\n                onClick={() => setInEditMode(false)}\r\n                disabled={pendingApiCall}\r\n              >\r\n                <span className=\"material-icons\">cancel</span>\r\n                {t(\"Cancel\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        title={t(\"Delete My Account\")}\r\n        okButton={t(\"Delete My Account\")}\r\n        visible={modalVisible}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        message={t(\"Are you sure to delete your account?\")}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getUser } from \"../api/apiCalls\";\r\nimport ProfileCard from \"../components/ProfileCard\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport HoaxFeed from \"../components/HoaxFeed\";\r\n\r\nconst UserPage = () => {\r\n  const [user, setUser] = useState({});\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const { username } = useParams(); // path=\"/user/:username\" --> App.js içindeki :username parametresi alınır\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress(\r\n    \"get\",\r\n    \"/api/1.0/users/\" + username,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    setNotFound(false);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const response = await getUser(username);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        setNotFound(true);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, [username]);\r\n\r\n  if (notFound) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"alert alert-danger text-center\">\r\n          <div>\r\n            <span className=\"material-icons\" style={{ fontSize: \"48px\" }}>\r\n              error\r\n            </span>\r\n          </div>\r\n          {t(\"User Not Found!\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (pendingApiCall || user.username !== username) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <ProfileCard user={user} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <HoaxFeed />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport logo from \"../assets/hoaxify.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutSuccess } from \"../redux/authActions\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\n\r\nconst TopBar = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { username, isLoggedIn, displayName, image } = useSelector((store) => {\r\n    return {\r\n      username: store.username,\r\n      isLoggedIn: store.isLoggedIn,\r\n      displayName: store.displayName,\r\n      image: store.image,\r\n    };\r\n  });\r\n\r\n  const menuArea = useRef(null);\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", menuClickTracker);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", menuClickTracker);\r\n    };\r\n  }, [isLoggedIn]);\r\n\r\n  const menuClickTracker = (event) => {\r\n    if (menuArea.current === null || !menuArea.current.contains(event.target)) {\r\n      setMenuVisible(false);\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSuccess());\r\n  };\r\n\r\n  let links = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/login\">\r\n          {t(\"Login\")}\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/signup\">\r\n          {t(\"Sign Up\")}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    let dropDownClass = \"dropdown-menu p-0 shadow\";\r\n\r\n    if (menuVisible) {\r\n      dropDownClass += \" show\";\r\n    }\r\n\r\n    links = (\r\n      <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n        <li className=\"nav-item dropdown\">\r\n          <div\r\n            className=\"d-flex\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => setMenuVisible(true)}\r\n          >\r\n            <ProfileImageWithDefault\r\n              image={image}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              className=\"rounded-circle m-auto shadow\"\r\n            />\r\n            <span className=\"nav-link dropdown-toggle\">{displayName}</span>\r\n          </div>\r\n          <div className={dropDownClass}>\r\n            <Link\r\n              className=\"dropdown-item d-flex p-2\"\r\n              to={`/user/${username}`}\r\n              onClick={() => setMenuVisible(false)}\r\n            >\r\n              <span className=\"material-icons text-info mr-2\">person</span>\r\n              {t(\"My Profile\")}\r\n            </Link>\r\n            <span\r\n              className=\"dropdown-item d-flex p-2\"\r\n              onClick={onLogoutSuccess}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <span className=\"material-icons text-danger mr-2\">\r\n                power_settings_new\r\n              </span>\r\n              {t(\"Logout\")}\r\n            </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-sm  bg-light mb-2\">\r\n      <nav className=\"navbar navbar-light container navbar-expand\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src={logo} width=\"60\" alt=\"Hoaxify Logo\" />\r\n          Hoaxify\r\n        </Link>\r\n        {links}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\nimport UserSignupPage from \"../pages/UserSignupPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport LanguageSelector from \"../components/LanguageSelector\";\nimport HomePage from \"../pages/HomePage\";\nimport UserPage from \"../pages/UserPage\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport TopBar from \"../components/TopBar\";\nimport { useSelector } from \"react-redux\";\n\nconst App = () => {\n  const { isLoggedIn } = useSelector((store) => ({\n    isLoggedIn: store.isLoggedIn,\n  }));\n\n  return (\n    <div>\n      <Router>\n        <TopBar />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          {!isLoggedIn && <Route path=\"/login\" component={LoginPage} />}\n          {!isLoggedIn && <Route path=\"/signup\" component={UserSignupPage} />}\n          <Route path=\"/user/:username\" component={UserPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n      <LanguageSelector />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { register } from \"timeago.js\";\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    en: {\r\n      translations: {\r\n        \"Sign Up\": \"Sign Up\",\r\n        \"Password mismatch\": \"Password mismatch\",\r\n        Username: \"Username\",\r\n        \"Display Name\": \"Display Name\",\r\n        Password: \"Password\",\r\n        \"Password Repeat\": \"Password Repeat\",\r\n        Login: \"Login\",\r\n        Logout: \"Logout\",\r\n        Users: \"Users\",\r\n        Next: \"next >\",\r\n        Previous: \"< previous\",\r\n        \"Load Failure\": \"Load Failure\",\r\n        \"User Not Found!\": \"User Not Found!\",\r\n        Edit: \"Edit\",\r\n        \"Change Display Name\": \"Change Display Name\",\r\n        Save: \"Save\",\r\n        Cancel: \"Cancel\",\r\n        \"My Profile\": \"My Profile\",\r\n        \"Post Hoax...\": \"Post Hoax...\",\r\n        \"There are no hoaxes\": \"There are no hoaxes\",\r\n        \"Load Old Hoaxes\": \"Load Old Hoaxes\",\r\n        \"There are new hoaxes\": \"There are new hoaxes\",\r\n        \"Delete Hoax\": \"Delete Hoax\",\r\n        \"Are you sure to delete hoax?\": \"Are you sure to delete hoax?\",\r\n        \"Delete My Account\": \"Delete My Account\",\r\n        \"Are you sure to delete your account?\":\r\n          \"Are you sure to delete your account?\",\r\n      },\r\n    },\r\n    tr: {\r\n      translations: {\r\n        \"Sign Up\": \"Kaydol\",\r\n        \"Password mismatch\": \"Şifreler eşleşmiyor\",\r\n        Username: \"Kullanıcı Adı\",\r\n        \"Display Name\": \"Tercih Edilen İsim\",\r\n        Password: \"Şifre\",\r\n        \"Password Repeat\": \"Şifre Tekrar\",\r\n        Login: \"Giriş Yap\",\r\n        Logout: \"Çıkış\",\r\n        Users: \"Kullanıcılar\",\r\n        Next: \"sonraki >\",\r\n        Previous: \"< önceki\",\r\n        \"Load Failure\": \"Liste alınamadı\",\r\n        \"User Not Found!\": \"Kullanıcı Bulunamadı!\",\r\n        Edit: \"Düzenle\",\r\n        \"Change Display Name\": \"Görünür İsminizi Değiştirin\",\r\n        Save: \"Kaydet\",\r\n        Cancel: \"İptal\",\r\n        \"My Profile\": \"Hesabım\",\r\n        \"Post Hoax...\": \"Hoax Paylaş...\",\r\n        \"There are no hoaxes\": \"Hoax bulunamadı\",\r\n        \"Load Old Hoaxes\": \"Geçmiş Hoaxları Yükle\",\r\n        \"There are new hoaxes\": \"Yeni Hoaxlar var\",\r\n        \"Delete Hoax\": `Hoax'u Sil`,\r\n        \"Are you sure to delete hoax?\": `Hoax'u silmek istediğinizden emin misiniz?`,\r\n        \"Delete My Account\": \"Hesabımı Sil\",\r\n        \"Are you sure to delete your account?\":\r\n          \"Hesabınızı silmek istediğinizden emin misiniz?\",\r\n      },\r\n    },\r\n  },\r\n  fallbackLng: \"en\", // hata durumunda dil ne olsun\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n  keySeparator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeparator: \",\",\r\n  },\r\n  react: {\r\n    wait: true,\r\n  },\r\n});\r\n\r\nconst timeagoTR = (number, index) => {\r\n  return [\r\n    [\"az önce\", \"şimdi\"],\r\n    [\"%s saniye önce\", \"%s saniye içinde\"],\r\n    [\"1 dakika önce\", \"1 dakika içinde\"],\r\n    [\"%s dakika önce\", \"%s dakika içinde\"],\r\n    [\"1 saat önce\", \"1 saat içinde\"],\r\n    [\"%s saat önce\", \"%s saat içinde\"],\r\n    [\"1 gün önce\", \"1 gün içinde\"],\r\n    [\"%s gün önce\", \"%s gün içinde\"],\r\n    [\"1 hafta önce\", \"1 hafta içinde\"],\r\n    [\"%s hafta önce\", \"%s hafta içinde\"],\r\n    [\"1 ay önce\", \"1 ay içinde\"],\r\n    [\"%s ay önce\", \"%s ay içinde\"],\r\n    [\"1 yıl önce\", \"1 yıl içinde\"],\r\n    [\"%s yıl önce\", \"%s yıl içinde\"],\r\n  ][index];\r\n};\r\nregister(\"tr\", timeagoTR);\r\n\r\nexport default i18n;\r\n","import * as ACTIONS from \"./Constants\";\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined,\r\n};\r\n\r\n// Başlangıçta state tanımlanmazsa default state --> ...defaultState\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true,\r\n    };\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      ...action.payload,\r\n      // ...action.payload --> displayName: action.payload.displayName, image: action.payload.image\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport SecureLS from \"secure-ls\";\r\nimport thunk from \"redux-thunk\";\r\nimport { setAuthorizationHeader } from \"../api/apiCalls\";\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLS.get(\"hoax-auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined,\r\n  };\r\n\r\n  if (hoaxAuth) {\r\n    return hoaxAuth;\r\n  }\r\n\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = (newState) => {\r\n  secureLS.set(\"hoax-auth\", newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const initialState = getStateFromStorage();\r\n  setAuthorizationHeader(initialState);\r\n\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const store = createStore(\r\n    authReducer,\r\n    getStateFromStorage(),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n\r\n  // store'da her değişim olduğunda bu fonksiyon çalışacak\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./bootstrap-override.scss\";\nimport \"./i18n\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}